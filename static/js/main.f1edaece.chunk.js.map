{"version":3,"sources":["component/FoodItem.js","App.js","index.js"],"names":["FoodItem","props","dishCurrency","dish_currency","dishName","dish_name","dishPrice","dish_price","dishImage","dish_image","dishDescription","dish_description","dishCalories","dish_calories","addonCat","dishType","dish_Type","dishAvailability","dish_Availability","setCart","_useState","useState","_useState2","_slicedToArray","itemCount","setItemCount","_jsxs","className","children","_jsx","type","onClick","prevCount","src","alt","App","currentTab","setTab","_useState3","_useState4","tabsList","setTabsList","_useState5","_useState6","cartCount","setCartCount","onTabChange","event","target","textContent","useEffect","apiCall","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","ok","json","table_menu_list","menu_category","t0","console","log","concat","message","stop","apply","arguments","FaShoppingCart","map","eachItem","filter","e","category_dishes","dish","_objectSpread","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1edaece.chunk.js","sourcesContent":["import {useState} from 'react'\n\nconst FoodItem = props => {\n  const {\n    dish_currency: dishCurrency,\n    dish_name: dishName,\n    dish_price: dishPrice,\n    dish_image: dishImage,\n    dish_description: dishDescription,\n    dish_calories: dishCalories,\n    addonCat,\n    dish_Type: dishType,\n    dish_Availability: dishAvailability,\n    setCart,\n  } = props\n\n  const [itemCount, setItemCount] = useState(0)\n\n  const incrementCount = () => {\n    setItemCount(prevCount => prevCount + 1)\n    setCart(prevCount => prevCount + 1)\n  }\n  const decrementCount = () => {\n    setItemCount(prevCount => (prevCount > 0 ? prevCount - 1 : 0))\n    if (itemCount > 0) {\n      setCart(prevCount => (prevCount > 0 ? prevCount - 1 : 0))\n    }\n  }\n\n  // useEffect(() => {\n  //   setCart(prevCount => prevCount + itemCount)\n  // }, [itemCount])\n\n  return (\n    <div className=\"item-card-container\">\n      <div className=\"first-con\">\n        <div className={dishType === 2 ? 'veg-box' : 'veg-box redCl'}>\n          <div className={dishType === 2 ? 'veg-button' : 'veg-button redBg'} />\n        </div>\n        <div className=\"item-summery-container\">\n          <h1 className=\"food-name\">{dishName}</h1>\n          <p className=\"rating\">\n            {dishCurrency} {dishPrice}\n          </p>\n          <p className=\"discription\">{dishDescription}</p>\n          {dishAvailability ? (\n            <div className=\"increase-deacrease-con\">\n              <button\n                className=\"item-count-btn\"\n                type=\"button\"\n                onClick={decrementCount}\n              >\n                -\n              </button>\n              {itemCount}\n              <button\n                className=\"item-count-btn\"\n                type=\"button\"\n                onClick={incrementCount}\n              >\n                +\n              </button>\n            </div>\n          ) : (\n            <p className=\"not-available\">Not Available</p>\n          )}\n          <p className={addonCat[0] ? 'cutom-option' : 'cutom-option visible'}>\n            Customization Available\n          </p>\n        </div>\n      </div>\n      <p className=\"calories\">{dishCalories} calories</p>\n      <img className=\"img\" src={dishImage} alt={dishName} />\n    </div>\n  )\n}\n\nexport default FoodItem\n","import './App.css'\nimport {FaShoppingCart} from 'react-icons/fa'\nimport {useState, useEffect} from 'react'\nimport FoodItem from './component/FoodItem'\n\nconst App = () => {\n  const [currentTab, setTab] = useState('')\n  const [tabsList, setTabsList] = useState([])\n  const [cartCount, setCartCount] = useState(0)\n\n  const onTabChange = event => {\n    setTab(event.target.textContent)\n  }\n\n  useEffect(() => {\n    const apiCall = async () => {\n      try {\n        const response = await fetch(\n          'https://apis2.ccbp.in/restaurant-app/restaurant-menu-list-details',\n        )\n        if (response.ok) {\n          const data = await response.json()\n          setTabsList(data[0].table_menu_list)\n          setTab(data[0].table_menu_list[0].menu_category)\n        }\n      } catch (e) {\n        console.log(`Problem: ${e.message}`)\n      }\n    }\n    apiCall()\n  }, [])\n\n  return (\n    <div className=\"main-container\">\n      <header className=\"header\">\n        <h1 className=\"main-heading\">UNI Resto Cafe</h1>\n        <div>\n          <p>My Orders</p>\n          <div>\n            <FaShoppingCart />\n            <div className=\"cart-count-con\">\n              <p>{cartCount}</p>\n            </div>\n          </div>\n        </div>\n      </header>\n      <div className=\"tabs-container\">\n        {tabsList.map(eachItem => (\n          <button\n            key={eachItem.dish_name}\n            className={\n              currentTab === eachItem.menu_category\n                ? 'tab-btn red-btn'\n                : 'tab-btn'\n            }\n            type=\"button\"\n            onClick={onTabChange}\n          >\n            {eachItem.menu_category}\n          </button>\n        ))}\n      </div>\n      <div className=\"items-list-container\">\n        {tabsList[0] &&\n          tabsList\n            .filter(e => e.menu_category === currentTab)\n            .map(e =>\n              e.category_dishes.map(dish => (\n                <FoodItem\n                  key={dish.dish_name}\n                  {...dish}\n                  cartCount={cartCount}\n                  setCart={setCartCount}\n                />\n              )),\n            )}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}